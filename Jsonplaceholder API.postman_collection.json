{
	"info": {
		"_postman_id": "8730cdbd-94d3-42e6-a63c-73fa24598675",
		"name": "Jsonplaceholder API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "35123992"
	},
	"item": [
		{
			"name": "Posts",
			"item": [
				{
					"name": "AllPosts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Testuoju request laika\r",
									"//100 ms ir 1000ms\r",
									"//pm objektas/kitamasis Postman, irankiu objektas\r",
									"//methodas test()- atliekamas musu aprasytas testas\r",
									"\r",
									"\r",
									"pm.test(\"Ar request laikas maziau nei 300ms\", function(){\r",
									"   // pm.response.\r",
									"   //iki 500ms\r",
									"   pm.expect(pm.response.responseTime).to.be.below(300)\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Response laikas tarp 100ms ir 1000ms?\", function(){\r",
									"   \r",
									"   pm.expect(pm.response.responseTime).to.be.within(100,1000)\r",
									"\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 2xx\", function () {\r",
									"   // pm.response.to.have.status(200,);\r",
									"   pm.expect(pm.response.code).to.be.within(200,203)\r",
									"});\r",
									"\r",
									"pm.test(\"Body JSON formato?\"),function(){\r",
									"    // pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json')\r",
									"    pm.response.to.be.json;\r",
									"}\r",
									"\r",
									"\r",
									"pm.test(\"Content-Type is present\"),function(){\r",
									"    pm.response.to.have.header(\"Content-type\")\r",
									"}\r",
									"\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {},
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "/posts/1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/45",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								"45"
							]
						}
					},
					"response": []
				},
				{
					"name": "NewPost",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \r\n    \"title\": \"foo\",\r\n    \"body\": \"bar\",\r\n    \"userId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts"
							],
							"query": [
								{
									"key": "kintamasis",
									"value": "12",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdatePost",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 1,\r\n    \"title\": \"foo\",\r\n    \"body\": \"bar\",\r\n    \"userId\": 1  \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/1",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "PatchPost",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"test\"\r\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/1",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "GettingHtmlOfGuide",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				},
				{
					"name": "DeletePost",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/posts/1",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"posts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Style.css",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Comments",
			"item": [
				{
					"name": "Getting a resource",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/comments",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "/comments/1",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/comments/1",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"comments",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/comments/1",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"postId\": 20,\r\n    \"id\": 501,\r\n    \"name\": \"et sint quia dolor et est ea nulla cum\",\r\n    \"email\": \"Leone_Fay@orrin.com\",\r\n    \"body\": \"rwerweryweryweyweryweryweyweryweyrewyfgsfgsfgsfgsdfgdsew\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/comments",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "/comments/1 Copy 3",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"postId\": 20,\r\n    \"id\": 20,\r\n    \"name\": \"et sint quia dolor et est ea nulla cum\",\r\n    \"email\": \"Leone_Fay@orrin.com\",\r\n    \"body\": \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/comments/1",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"comments",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/comments/1 Copy 4",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/comments/1",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"comments",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Albums",
			"item": [
				{
					"name": "AllAlbums",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Photos",
			"item": []
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "AllUsers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/users",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetUser",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/users/1",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "NewUser",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/users",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateUser",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 1,\r\n    \"name\": \"test test\",\r\n    \"username\": \"Bret\",\r\n    \"email\": \"Sincere@april.biz\",\r\n    \"address\": {\r\n        \"street\": \"Kulas Light\",\r\n        \"suite\": \"Apt. 556\",\r\n        \"city\": \"Gwenborough\",\r\n        \"zipcode\": \"92998-3874\",\r\n        \"geo\": {\r\n            \"lat\": \"-37.3159\",\r\n            \"lng\": \"81.1496\"\r\n        }\r\n    },\r\n    \"phone\": \"1-770-736-8031 x56442\",\r\n    \"website\": \"hildegard.org\",\r\n    \"company\": {\r\n        \"name\": \"Romaguera-Crona\",\r\n        \"catchPhrase\": \"Multi-layered client-server neural-net\",\r\n        \"bs\": \"harness real-time e-markets\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/users/1",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "PatchUser",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"test test\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/users/1",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteUser",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://jsonplaceholder.typicode.com/users/1",
							"protocol": "https",
							"host": [
								"jsonplaceholder",
								"typicode",
								"com"
							],
							"path": [
								"users",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Todos",
			"item": [
				{
					"name": "New Request",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"// Testuoju request laika\r",
					"//100 ms ir 1000ms\r",
					"//pm objektas/kitamasis Postman, irankiu objektas\r",
					"//methodas test()- atliekamas musu aprasytas testas\r",
					"\r",
					"\r",
					"pm.test(\"Ar request laikas maziau nei 300ms\", function(){\r",
					"   // pm.response.\r",
					"   //iki 500ms\r",
					"   pm.expect(pm.response.responseTime).to.be.below(300)\r",
					"\r",
					"});\r",
					"\r",
					"pm.test(\"Response laikas tarp 100ms ir 1000ms?\", function(){\r",
					"   \r",
					"   pm.expect(pm.response.responseTime).to.be.within(100,1000)\r",
					"\r",
					"});\r",
					"\r",
					"\r",
					"pm.test(\"Status code is 2xx\", function () {\r",
					"   // pm.response.to.have.status(200,);\r",
					"   pm.expect(pm.response.code).to.be.within(200,203)\r",
					"});\r",
					"\r",
					"pm.test(\"Body JSON formato?\"),function(){\r",
					"    // pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json')\r",
					"    pm.response.to.be.json;\r",
					"}\r",
					"\r",
					"\r",
					"pm.test(\"Content-Type is present\"),function(){\r",
					"    pm.response.to.have.header(\"Content-type\")\r",
					"}\r",
					"\r",
					"\r",
					"pm.test(\"Successful POST request\", function () {\r",
					"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
					"});\r",
					""
				]
			}
		}
	]
}